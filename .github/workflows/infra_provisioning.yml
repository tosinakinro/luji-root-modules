name: infra_provisioning

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: dev/mwaa 

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure Git for HTTPS Authentication
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0 # Adjust the Terraform version as needed

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.tfplan

      - name: Terraform Plan PR Comment
        if: github.event_name == 'pull_request' || github.ref != 'refs/heads/main'
        run: |
          echo "Terraform plan completed on non-main branch or PR."
          echo "Add any necessary comments here."
          
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && steps.approval.outputs.conclusion == 'success'
        run: terraform apply "plan.tfplan"
  
      - name: Approval Denied or Timeout
        if: github.ref == 'refs/heads/main' && steps.approval.outputs.conclusion != 'success'
        run: echo "Approval denied or timed out. Terraform apply was not executed."
